@GenModel(
    bundleManifest="false",
    modelDirectory="ru.neoflex.nfcore.base/src/java/java-gen",
    complianceLevel="7.0",
    rootExtendsClass="org.eclipse.emf.ecore.impl.EObjectImpl",
    rootExtendsInterface="org.eclipse.emf.ecore.EObject"
)
package ru.neoflex.nfcore.base.auth
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EPackage
import org.eclipse.emf.ecore.EClass
import ru.neoflex.nfcore.base.types.Timestamp

class Role {
    String name
    String description
    contains Permission[] grants opposite role

    op GrantStatus permitted(ActionType actionType, EObject eObject)
}

abstract class Permission {
    container Role role opposite grants
    GrantStatus grantStatus
    ActionType[] actionTypes

    op Integer priority()
    op GrantStatus permitted(ActionType actionType, EObject eObject)
}

class AllPermission extends Permission {
    op Integer priority() {0}
}

class PackagePermission extends Permission {
    refers EPackage ePackage
    op Integer priority() {1}
}

class ClassPermission extends Permission {
    refers EClass theClass
    op Integer priority() {2}
}

class ReferencePermission extends Permission {
    refers EObject referencedEObject
    op Integer priority() {3}
}

class ObjectPermission extends Permission {
    refers EObject eObject
    op Integer priority() {4}
}

enum GrantStatus {
    UNDEFINED
    GRANTED
    REVOKED
}

enum ActionType {
    ALL
    READ
    WRITE
    CALL
}

class GrantPermission {
    refers Permission permission
}

abstract class Authority {
    String name
    refers Role[] roles
}

abstract class Authenticator {
    refers User user opposite authenticators
    Boolean disabled
}

class PasswordAuthenticator extends Authenticator {
    String password
}

class User extends Authority {
    String email
    Timestamp lastLogin
    contains Authenticator[] authenticators opposite user
    refers Group[] groups opposite users
}

class Group extends Authority {
    refers User[] users opposite groups
}
